{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,+DAMA,IAAMC,EAAa,IAAI,EAAAC,EAAAC,YAEjBC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,MAAOF,SAASC,cAAc,eAC9BE,UAAWH,SAASC,cAAc,eAClCG,QAASJ,SAASC,cAAc,YAChCI,SAAUL,SAASC,cAAc,cAGnCH,EAAKC,KAAKO,iBAAiB,U,SAKKC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,IAH/B,IAAIC,EAAe,E,SAGJJ,I,OAAAA,EAAfK,EAAApB,EAAA,CAAAoB,EAAAC,GAAAC,MAAA,SAAAC,EAAgCT,G,qEAC9BA,EAAMU,iBACNnB,EAAKM,QAAQc,UAAY,GACO,KAA5BpB,EAAKI,MAAMiB,MAAMC,OAAa,C,sBAChCP,EAAAQ,GAASC,OAAOC,QACd,wDAEFzB,EAAKI,MAAMiB,MAAQ,G,iCAGrBP,EAAe,EACfjB,EAAW6B,KAAO,EAClB7B,EAAW8B,MAAQ3B,EAAKI,MAAMiB,MAAMC,O,mBAGXzB,EAAW+B,c,QAClCC,EADYC,EAAAC,KAAJC,M,0DAMVhC,EAAKI,MAAMiB,MAAQ,G,2DArBUV,MAAAC,KAAAC,U,UAwBhBoB,I,OAAAA,EAAflB,EAAApB,EAAA,CAAAoB,EAAAC,GAAAC,MAAA,SAAAC,I,2FAI2BrB,EAAW+B,c,OAClCC,EADYC,EAAAC,KAAJC,M,0GAJgBrB,MAAAC,KAAAC,U,CAW5B,SAASgB,EAAeG,GACH,IAAfA,EAAKE,OAAoC,KAArBrC,EAAW8B,OAOX,IAApB9B,EAAW6B,MAAcM,EAAKG,UAAY,GAC5CpB,EAAAQ,GAASC,OAAOY,KAAK,oBAAmCC,OAAfL,EAAKG,UAAU,aAE1DtC,EAAW6B,MAAQ,EAcrB,SAA4BM,GAC1BhC,EAAKM,QAAQgC,mBAAmB,aAAa,EAAAC,EAAAC,SAAkBR,EAAKS,OAEpE3B,GAAgBkB,EAAKS,KAAKC,OAC1B1C,EAAK2C,QAAQC,UAAUC,OAAO,Y,CAhB9BC,CAAmBd,IAXjBjB,EAAAQ,GAASC,OAAOC,QACd,2E,CA6BN,IAWMsB,EAAW,IAAIC,sBAXO,SAAAC,GAC1BA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBAAuC,KAArBvD,EAAW8B,QACrC0B,QAAQC,IAAIH,GACZE,QAAQC,IAAIxC,G,WA/CHmB,EAAatB,MAAAC,KAAAC,U,CAgDtB0C,GACA1D,EAAW6B,MAAQ,E,MAKsC,CAC7D8B,WAAY,UAGdT,EAASU,QAAQzD,EAAKO,S","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import imageCardTemplate from '../templates/gallery.hbs';\nimport Notiflix from 'notiflix';\nimport { PixabayAPI } from './pixabay-API';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst pixabayApi = new PixabayAPI();\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  input: document.querySelector('.form-input'),\n  submitBtn: document.querySelector('.search-btn'),\n  gallery: document.querySelector('.gallery'),\n  sentinel: document.querySelector('.sentinel'),\n};\n\nrefs.form.addEventListener('submit', handleSubmitForm);\n\nlet uploadedHits = 0;\n// let modalLightbox;\n\nasync function handleSubmitForm(event) {\n  event.preventDefault();\n  refs.gallery.innerHTML = '';\n  if (refs.input.value.trim() === '') {\n    Notiflix.Notify.failure(\n      'Sorry, your search query is empty. Please try again.'\n    );\n    refs.input.value = '';\n    return;\n  }\n  uploadedHits = 0;\n  pixabayApi.page = 1;\n  pixabayApi.query = refs.input.value.trim();\n\n  try {\n    const { data } = await pixabayApi.fetchPhotos();\n    onFetchSuccess(data);\n  } catch (error) {\n    onFetchError;\n  }\n\n  refs.input.value = '';\n}\n\nasync function loadMoreCards() {\n  //   modalLightbox.destroy();\n\n  try {\n    const { data } = await pixabayApi.fetchPhotos();\n    onFetchSuccess(data);\n  } catch (error) {\n    onFetchError;\n  }\n}\n\nfunction onFetchSuccess(data) {\n  if (data.total === 0 || pixabayApi.query === '') {\n    Notiflix.Notify.failure(\n      'Sorry, there are no images matching your search query. Please try again.'\n    );\n    return;\n  }\n\n  if (pixabayApi.page === 1 && data.totalHits > 0) {\n    Notiflix.Notify.info(`Hooray! We found ${data.totalHits} images.`);\n  }\n  pixabayApi.page += 1;\n\n  renderGalleryCards(data);\n\n  //   modalLightbox = new SimpleLightbox('.gallery a', {\n  //     captionDelay: 250,\n  //   });\n  //   modalLightbox.refresh();\n}\n\nfunction onFetchError(error) {\n  console.warn(error);\n}\n\nfunction renderGalleryCards(data) {\n  refs.gallery.insertAdjacentHTML('beforeend', imageCardTemplate(data.hits));\n\n  uploadedHits += data.hits.length;\n  refs.loadBtn.classList.remove('is-hidden');\n}\n\nconst intersectionObserve = entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting && pixabayApi.query !== '') {\n      console.log(entry);\n      console.log(uploadedHits);\n      loadMoreCards();\n      pixabayApi.page += 1;\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(intersectionObserve, {\n  rootMargin: '150px',\n});\n\nobserver.observe(refs.sentinel);\n"],"names":["$bpxeT","parcelRequire","$93b54f497d416715$var$pixabayApi","$ckYVG","PixabayAPI","$93b54f497d416715$var$refs","form","document","querySelector","input","submitBtn","gallery","sentinel","addEventListener","event","$93b54f497d416715$var$_handleSubmitForm","apply","this","arguments","$93b54f497d416715$var$uploadedHits","$parcel$interopDefault","$2TvXO","mark","_callee","preventDefault","innerHTML","value","trim","$6JpON","Notify","failure","page","query","fetchPhotos","$93b54f497d416715$var$onFetchSuccess","_ctx","sent","data","$93b54f497d416715$var$_loadMoreCards","total","totalHits","info","concat","insertAdjacentHTML","$1zY8r","default","hits","length","loadBtn","classList","remove","$93b54f497d416715$var$renderGalleryCards","$93b54f497d416715$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","$93b54f497d416715$var$loadMoreCards","rootMargin","observe"],"version":3,"file":"infinite-scroll.a422e7bc.js.map"}