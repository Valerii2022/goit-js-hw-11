{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,qCAMA,MAAMC,EAAa,IAAI,EAAAC,EAAAC,YAEjBC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,MAAOF,SAASC,cAAc,eAC9BE,UAAWH,SAASC,cAAc,eAClCG,QAASJ,SAASC,cAAc,YAChCI,SAAUL,SAASC,cAAc,cAGnCH,EAAKC,KAAKO,iBAAiB,UAK3BC,eAAgCC,GAG9B,GAFAA,EAAMC,iBACNX,EAAKM,QAAQM,UAAY,GACO,KAA5BZ,EAAKI,MAAMS,MAAMC,OAKnB,OAJAC,EAAAC,GAASC,OAAOC,QACd,6DAEFlB,EAAKI,MAAMS,MAAQ,IAGrBM,EAAe,EACftB,EAAWuB,KAAO,EAClBvB,EAAWwB,MAAQrB,EAAKI,MAAMS,MAAMC,OAEpC,IACE,MAAMQ,KAAEA,SAAezB,EAAW0B,cAClCC,EAAeF,E,CACf,MAAOG,G,CAITzB,EAAKI,MAAMS,MAAQ,E,IAxBrB,IAAIM,EAAe,EAsCnB,SAASK,EAAeF,GACH,IAAfA,EAAKI,OAAoC,KAArB7B,EAAWwB,OAOX,IAApBxB,EAAWuB,MAAcE,EAAKK,UAAY,GAC5CZ,EAAAC,GAASC,OAAOW,KAAK,oBAAoBN,EAAKK,qBAEhD9B,EAAWuB,MAAQ,EAcrB,SAA4BE,GAC1BtB,EAAKM,QAAQuB,mBAAmB,aAAa,EAAAlC,EAAAmC,SAAkBR,EAAKS,OAEpEZ,GAAgBG,EAAKS,KAAKC,OAC1BhC,EAAKiC,QAAQC,UAAUC,OAAO,Y,CAhB9BC,CAAmBd,IAXjBP,EAAAC,GAASC,OAAOC,QACd,2E,CAwCW,IAAImB,sBAXOC,IAC1BA,EAAQC,SAAQC,IACVA,EAAMC,gBAAuC,KAArB5C,EAAWwB,QACrCqB,QAAQC,IAAIH,GACZE,QAAQC,IAAIxB,GA/ClBV,iBAGE,IACE,MAAMa,KAAEA,SAAezB,EAAW0B,cAClCC,EAAeF,E,CACf,MAAOG,G,EA0CLmB,GACA/C,EAAWuB,MAAQ,E,GAErB,GAG2D,CAC7DyB,WAAY,UAGLC,QAAQ9C,EAAKO","sources":["src/js/infinite-scroll.js"],"sourcesContent":["import imageCardTemplate from '../templates/gallery.hbs';\nimport Notiflix from 'notiflix';\nimport { PixabayAPI } from './pixabay-API';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst pixabayApi = new PixabayAPI();\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  input: document.querySelector('.form-input'),\n  submitBtn: document.querySelector('.search-btn'),\n  gallery: document.querySelector('.gallery'),\n  sentinel: document.querySelector('.sentinel'),\n};\n\nrefs.form.addEventListener('submit', handleSubmitForm);\n\nlet uploadedHits = 0;\n// let modalLightbox;\n\nasync function handleSubmitForm(event) {\n  event.preventDefault();\n  refs.gallery.innerHTML = '';\n  if (refs.input.value.trim() === '') {\n    Notiflix.Notify.failure(\n      'Sorry, your search query is empty. Please try again.'\n    );\n    refs.input.value = '';\n    return;\n  }\n  uploadedHits = 0;\n  pixabayApi.page = 1;\n  pixabayApi.query = refs.input.value.trim();\n\n  try {\n    const { data } = await pixabayApi.fetchPhotos();\n    onFetchSuccess(data);\n  } catch (error) {\n    onFetchError;\n  }\n\n  refs.input.value = '';\n}\n\nasync function loadMoreCards() {\n  //   modalLightbox.destroy();\n\n  try {\n    const { data } = await pixabayApi.fetchPhotos();\n    onFetchSuccess(data);\n  } catch (error) {\n    onFetchError;\n  }\n}\n\nfunction onFetchSuccess(data) {\n  if (data.total === 0 || pixabayApi.query === '') {\n    Notiflix.Notify.failure(\n      'Sorry, there are no images matching your search query. Please try again.'\n    );\n    return;\n  }\n\n  if (pixabayApi.page === 1 && data.totalHits > 0) {\n    Notiflix.Notify.info(`Hooray! We found ${data.totalHits} images.`);\n  }\n  pixabayApi.page += 1;\n\n  renderGalleryCards(data);\n\n  //   modalLightbox = new SimpleLightbox('.gallery a', {\n  //     captionDelay: 250,\n  //   });\n  //   modalLightbox.refresh();\n}\n\nfunction onFetchError(error) {\n  console.warn(error);\n}\n\nfunction renderGalleryCards(data) {\n  refs.gallery.insertAdjacentHTML('beforeend', imageCardTemplate(data.hits));\n\n  uploadedHits += data.hits.length;\n  refs.loadBtn.classList.remove('is-hidden');\n}\n\nconst intersectionObserve = entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting && pixabayApi.query !== '') {\n      console.log(entry);\n      console.log(uploadedHits);\n      loadMoreCards();\n      pixabayApi.page += 1;\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(intersectionObserve, {\n  rootMargin: '150px',\n});\n\nobserver.observe(refs.sentinel);\n"],"names":["$4TmbC","parcelRequire","$7f13665ecc617d63$var$pixabayApi","$dgPer","PixabayAPI","$7f13665ecc617d63$var$refs","form","document","querySelector","input","submitBtn","gallery","sentinel","addEventListener","async","event","preventDefault","innerHTML","value","trim","$parcel$interopDefault","$7Y9D8","Notify","failure","$7f13665ecc617d63$var$uploadedHits","page","query","data","fetchPhotos","$7f13665ecc617d63$var$onFetchSuccess","error","total","totalHits","info","insertAdjacentHTML","default","hits","length","loadBtn","classList","remove","$7f13665ecc617d63$var$renderGalleryCards","IntersectionObserver","entries","forEach","entry","isIntersecting","console","log","$7f13665ecc617d63$var$loadMoreCards","rootMargin","observe"],"version":3,"file":"infinite-scroll.057313fa.js.map"}